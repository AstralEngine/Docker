notifications:
  email:
    false
language: shell

stages:
  - test
  - trigger

env:
  - TARGET: x86_64-unknown-linux-gnu
    TOOLCHAIN: stable
  - TARGET: x86_64-unknown-linux-gnu
    TOOLCHAIN: beta
  - TARGET: x86_64-unknown-linux-gnu
    TOOLCHAIN: nightly
  - TARGET: i686-unknown-linux-gnu
    TOOLCHAIN: stable
  - TARGET: i686-unknown-linux-gnu
    TOOLCHAIN: beta
  - TARGET: i686-unknown-linux-gnu
    TOOLCHAIN: nightly
  - TARGET: aarch64-linux-android
    TOOLCHAIN: stable
  - TARGET: arm-linux-androideabi
    TOOLCHAIN: stable
  - TARGET: x86_64-linux-android
    TOOLCHAIN: stable
  # - TARGET: i686-linux-android
    # TOOLCHAIN: stable

install: |
  git clone https://github.com/docker-library/official-images.git ~/official-images

before_script: |
  RUSTC_VERSION=$(docker run astralengine/$TARGET:$TOOLCHAIN rustc --version || true)
  echo $RUSTC_VERSION

script: |
  travis_retry docker build \
    --rm \
    --pull \
    --cache-from astralengine/$TARGET:$TOOLCHAIN \
    --file $TARGET/Dockerfile \
    --tag astralengine/$TARGET:$TOOLCHAIN \
    --build-arg TOOLCHAIN=$TOOLCHAIN \
    --build-arg DATE="`date`" \
    .
  ~/official-images/test/run.sh astralengine/$TARGET:$TOOLCHAIN

after_success: |
  RUSTC_VERSION_NEW=$(docker run astralengine/$TARGET:$TOOLCHAIN rustc --version)
  echo $RUSTC_VERSION_NEW

before_deploy: |
  if [[ $TRAVIS_EVENT_TYPE == cron ]]; then
    if [[ $RUSTC_VERSION == $RUSTC_VERSION_NEW && $TRAVIS_EVENT_TYPE == cron ]]; then
      echo "docker rmi -f astralengine/$TARGET:$TOOLCHAIN"
    elif [[ $TOOLCHAIN == stable ]]; then
      VERSION=$(echo $RUSTC_VERSION_NEW | awk '{ print $2 }')
      echo "docker tag astralengine/$TARGET:$TOOLCHAIN astralengine/$TARGET:$VERSION"
      echo "docker tag astralengine/$TARGET:$TOOLCHAIN astralengine/$TARGET:latest"
    fi
  fi
  echo "$REGISTRY_PASS" | docker login -u "$REGISTRY_USER" --password-stdin
deploy:
  provider: script
  script: docker push astralengine/$TARGET || true
  on:
    branch: master

after_script: docker images

jobs:
  include:
    - stage: trigger
      name: Astral Engine
      deploy: false
      script : |
        RUSTC_STABLE=$(docker run astralengine/$TARGET:stable rustc --version)
        RUSTC_BETA=$(docker run astralengine/$TARGET:beta rustc --version)
        RUSTC_NIGHTLY=$(docker run astralengine/$TARGET:nightly rustc --version)

        curl -s -X GET \
          -H "Content-Type:application/json" \
          -H "Accept:application/json" \
          -H "Authorization:token ${GH_TOKEN}" \
          https://api.github.com/gists/$GIST_ID > latest.json

        LATEST_STABLE=$(cat latest.json | jq -r '.["files"]["stable.txt"]["content"]')
        LATEST_BETA=$(cat latest.json | jq -r '.["files"]["beta.txt"]["content"]')
        LATEST_NIGHTLY=$(cat latest.json | jq -r '.["files"]["nightly.txt"]["content"]')

        if [ "${RUSTC_STABLE}" != "${LATEST_STABLE}" ]; then
          curl -s -X PATCH \
            -H "Content-Type:application/json" \
            -H "Accept:application/json" \
            -H "Authorization:token ${GH_TOKEN}" \
            -d "{\"description\":\"Update stable\",\"files\":{\"stable.txt\":{\"content\":\"$RUSTC_STABLE\"}}}" \
            https://api.github.com/gists/$GIST_ID

          curl -s -X POST \
            -H "Content-Type:application/json" \
            -H "Accept:application/json" \
            -H "Travis-API-Version:3" \
            -H "Authorization:token ${TRAVIS_TOKEN}" \
            -d "{\"request\":{\"branch\":\"master\",\"message\":\"Test ${RUSTC_STABLE}\"}}" \
            https://api.travis-ci.org/repo/astral-engine%2Fastral/requests
          wait 10s
        fi

        if [ "${RUSTC_BETA}" != "${LATEST_BETA}" ]; then
          curl -s -X PATCH \
            -H "Content-Type:application/json" \
            -H "Accept:application/json" \
            -H "Authorization:token ${GH_TOKEN}" \
            -d "{\"description\":\"Update versions\",\"files\":{\"beta.txt\":{\"content\":\"$RUSTC_BETA\"}}}" \
            https://api.github.com/gists/$GIST_ID

          curl -s -X POST \
            -H "Content-Type:application/json" \
            -H "Accept:application/json" \
            -H "Travis-API-Version:3" \
            -H "Authorization:token ${TRAVIS_TOKEN}" \
            -d "{\"request\":{\"branch\":\"master\",\"message\":\"Test ${RUSTC_BETA}\"}}" \
            https://api.travis-ci.org/repo/astral-engine%2Fastral/requests
          wait 10s
        fi

        if [ "${RUSTC_NIGHTLY}" != "${LATEST_NIGHTLY}" ]; then
          curl -s -X PATCH \
            -H "Content-Type:application/json" \
            -H "Accept:application/json" \
            -H "Authorization:token ${GH_TOKEN}" \
            -d "{\"description\":\"Update versions\",\"files\":{\"nightly.txt\":{\"content\":\"$RUSTC_NIGHTLY\"}}}" \
            https://api.github.com/gists/$GIST_ID

          curl -s -X POST \
            -H "Content-Type:application/json" \
            -H "Accept:application/json" \
            -H "Travis-API-Version:3" \
            -H "Authorization:token ${TRAVIS_TOKEN}" \
            -d "{\"request\":{\"branch\":\"master\",\"message\":\"Test ${RUSTC_NIGHTLY}\"}}" \
            https://api.travis-ci.org/repo/astral-engine%2Fastral/requests
        fi
